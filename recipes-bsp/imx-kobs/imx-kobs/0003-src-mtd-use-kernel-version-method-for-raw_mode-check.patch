From 922a15a9aee0608155083770816721283d88b541 Mon Sep 17 00:00:00 2001
From: Pushpal Sidhu <psidhu@gateworks.com>
Date: Fri, 1 Jul 2016 09:48:57 -0700
Subject: [PATCH 3/4] src: mtd: use kernel version method for raw_mode checking

The downstream Freescale vendor kernel has a patch that allows determining
if raw NAND flash mode is provided via a debugfs file. This is not present
in upstream kernels, but the raw access support was added in the 3.19
kernel, so we will check the kernel version if we can't find the file.

Please see upstream kernel commit: da3bc42c1becfde026656df50ad155239d4e1a6b

However, since Gateworks backported the upstream patch to the 3.14.48 kernel,
this patch will check for a minimum of a 3.14 kernel.

Signed-off-by: Tim Harvey <tharvey@gateworks.com>
Signed-off-by: Pushpal Sidhu <psidhu@gateworks.com>
---
 src/mtd.c | 24 +++++++++++++++++++++---
 1 file changed, 21 insertions(+), 3 deletions(-)

diff --git a/src/mtd.c b/src/mtd.c
index 855574b..3d181f6 100644
--- a/src/mtd.c
+++ b/src/mtd.c
@@ -34,6 +34,7 @@
 #include <errno.h>
 #include <sys/types.h>
 #include <sys/ioctl.h>
+#include <sys/utsname.h>
 
 #include "mtd.h"
 #include "rand.h"
@@ -808,15 +809,32 @@ struct mtd_data *mtd_open(const struct mtd_config *cfg, int flags)
 	md->cfg = *cfg;
 
 	/* check if use new raw access mode */
+	/* by looking for debugfs from fsl patch */
+	md->raw_mode_flag = 0;
 	fp = fopen("/sys/kernel/debug/gpmi-nand/raw_mode", "r");
 	if (!fp) {
-		md->raw_mode_flag = 0;
-		vp(md, "mtd: use legacy raw access mode\n");
+		/* fallback to kernel version: raw access added in 3.19 */
+		struct utsname uts;
+		if (!uname(&uts)) {
+			int major = 0, minor = 0;
+			sscanf(uts.release, "%d.%d", &major, &minor);
+			vp(md, "mtd: Linux %d.%d\n", major, minor);
+			/*
+			 * XXX: This is a hack for the Gateworks 3.14.48 Kernel
+			 *      since it has the patch that added raw access
+			 *      mode backported from 3.19
+			 */
+			if ((major << 8 | minor) > (3 << 8 | 13))
+				md->raw_mode_flag = 1;
+		}
 	} else {
 		fclose(fp);
 		md->raw_mode_flag = 1;
-		vp(md, "mtd: use new bch layout raw access mode\n");
 	}
+	if (md->raw_mode_flag)
+		vp(md, "mtd: use new bch layout raw access mode\n");
+	else
+		vp(md, "mtd: use legacy raw access mode\n");
 
 	if (plat_config_data->m_u32UseMultiBootArea) {
 
-- 
2.8.3

